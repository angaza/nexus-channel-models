---
swagger: '2.0'
info:
  title: Energy Consumption
  version: 0.7.2
  license:
    name: Angaza Data Model License (MIT License)
    url: https://github.com/angaza/nexus-embedded/blob/master/LICENSE
    x-copyright: Copyright 2020 Angaza, Inc. All rights reserved
schemes:
  - coap
consumes:
  # Note: JSON provided to render examples using redoc, actual data transmitted
  # is `application/vnd.ocf+cbor`
  #- application/vnd.ocf+cbor
  - application/json
produces:
  #- application/vnd.ocf+cbor
  - application/json
paths:
  "/eout":  # suggested URI
    get:
      summary: Retrieve current load/output energy consumption
      description: |
        This Resource describes the attributes associated with a
        load (or loads) connected to this device consuming energy.

        An instance of this resource may indicate the total output power to
        all loads, or multiple instances of this resource may be used to
        indicate separate power for each sub-load (for instance, if the
        implementing device is able to detect power going to television vs.
        lighting).

        The minimum set of properties to implement are `ao` and `vo`.

        All properties of this resource are read-only.

        Example `GET` response body in CBOR:
          `BF62766F192EF562616F186862706F187D636C64741846626674F462656F0063656F73187863656F70183C62737300FF`

        Originally derived from from OCF specs [`oic.r.energy.generation`](https://www.oneiota.org/revisions/6172)
        and [`oic.r.energy.overload`](https://www.oneiota.org/revisions/6174)

      parameters:
      # - "$ref": "#/parameters/interface"
      responses:
        '205':
          description: ''
          x-example:
            vo: 12021
            ao: 104
            po: 125
            lt: 70
            ft: false  # no fault detected
            eo: 115
            eos: 120
            eop: 60
            ss: 4  # values valid as of 4 seconds ago
          schema:
            "$ref": "#/definitions/Energyconsumption"

# Query parameters optional, Channel Core does not require interface query support
parameters:
  interface:
    in: query
    name: if
    type: string
    enum:
    - oic.if.r
definitions:
  Energyconsumption:
    properties:
      rt:
        description: |
          **Fixed Specification Value Only**. The Resource Type
          (Only reported if `oic.if.baseline` interface query is supported)
        items:
          enum:
          - angaza.com.nx.energy.use
          maxLength: 64
          type: string
        minItems: 1
        uniqueItems: true
        readOnly: true
        type: array
      rtr:
        description: The Nexus Channel Core Resource Type Registry value.
          (only reported if oic.if.baseline interface query is supported)
        readOnly: true
        type: integer
        minimum: 103
        maximum: 103
      if:
        description: The OCF Interface set supported by this Resource.
          (only reported if oic.if.baseline interface query is supported)
        items:
          enum:
          - oic.if.r  # oic.if.baseline optional
          type: string
        minItems: 1
        uniqueItems: true
        readOnly: true
        type: array
      vo:
        description: |
          Instantaneous 'voltage output', in millivolts.
          (RMS if AC).
        readOnly: true
        type: integer
        format: uint
        example: 12021
      ao:
        description: Instantaneous 'current output', in centiamps.
        type: integer
        format: uint
        example: 104
      aol:
        description: Current Limit, in centiamps.
        type: integer
        format: uint
        example: 104
      po:
        description: Instantaneous load 'power output', in deciwatts.
        readOnly: true
        type: integer
        format: uint
        example: 125
      lt:
        description: |
          Type of output load. Known types -
            * 0 = Disconnected/None
            * 1 = Total (Sum of all loads)
            * 5 = USB 5V Charging (Single load)
            * 6 = USB 5V Charging (Bank of phones/loads)
            * 10 = Home Lighting
            * 20 = Industrial/Work Lighting
            * 30 = Refrigeration (Generic)
            * 31 = Agriculture Cold-Chain Refrigeration
            * 32 = Household Refrigeration
            * 33 = SME Refrigeration
            * 34 = Ice Machine
            * 40 = Water Pump
            * 50 = Fan
            * 60 = Radio
            * 70 = Television
            * 80 = Laptop PC
            * 90 = Desktop PC
            * 100 = Speaker Sound System (PA)
            * 110 = Textile (Sewing) Machine
            * 120 = Barber Equipment (Clippers)
            * 130 = Office Equipment
            * 140 = Hand Power Tools
            * 150 = Mills, Grinders, Pulpers, Presses
            * 160 = Heating
            * 161 = Rice Cooker
            * 162 = Kettle
            * 162 = Clothes Iron
        readOnly: true
        type: integer
        example: 70
      ft:
        description: True if there is a detectable fault for this load (such
          as a short).
        readOnly: true
        type: boolean
        example: false
      eo:
        description: |
          'Energy output' in deciwatt-hours(Wh / 10). Computed over a time
          window defined by `eos` and `eop`.
        type: integer
      eos:
        description: |
          'Energy output start'. Minutes in the past (minutes ago)
          when the reported `eg` value began accumulation.
        type: integer
        format: uint
        example: 120
      eop:
        description: |
          'Energy output period'. Minutes since `eos` over which
          the value of `eo` was accumulated. For example, if `eos` is 60, and
          `eop` is 60, the value of `eg` represents the watt-hours generated during
          the past hour.
        type: integer
        format: uint
        example: 60
      ts:
        description: Timestamp of recorded data in Unix format
        readOnly: true
        type: integer
        format: uint32
      ths: 
        description: Any resource with one or more timeseries properties is enabled with this optional property which can indicate that the device has stored historical data while offline that it can sequentially upload to the gateway via multiple reads
        readOnly: true
        type: integer
        format: uint16
        example: 10
      thi:
        description: Whenever this property is available that means it is a timeseries resource. thi = 0, means there is no more timeseries data. Any number greater than zero can be used for indicating which data proceeds especially when the timestamp is the same.
        readOnly: true
        type: integer
        format: uint32
        example: 2
      ss:
        description: Seconds since the observed data in this resource was
          measured.
        minimum: 0
        readOnly: true
        type: integer
        format: uint


    type: object
    required:
    - vo
    - ao
